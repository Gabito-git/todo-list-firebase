{"version":3,"sources":["types/types.js","firebase/firebase-config.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","helpers/loadTasks.js","actions/uiActions.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","actions/tasksActions.js","helpers/datesCalc.js","components/app/main/NewTask.js","components/app/main/SideButton.js","components/app/main/Sidebar.js","components/app/main/TaskCard.js","components/app/main/TasksList.js","components/app/main/TaskField.js","components/app/main/MainScreen.js","helpers/fileUpload.js","components/app/profile/ProfileScreen.js","components/app/topbar/Topbar.js","routers/DashboardRouter.js","routes/PublicRoute.js","routes/PrivateRoute.js","routers/AppRouter.js","reducers/authReducer.js","reducers/tasksReducer.js","reducers/uiReducer.js","store/store.js","App.js","index.js"],"names":["types","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","googleAuthProvider","auth","GoogleAuthProvider","startUpdatingProfile","displayName","password","dispatch","a","user","currentUser","updateProfile","login","uid","updatePassword","Swal","fire","icon","text","title","name","type","payload","logout","useForm","initialState","useState","formState","setFormState","reset","handleInputChange","target","value","LoginScreen","useDispatch","email","className","to","onSubmit","e","preventDefault","signInWithEmailAndPassword","console","log","startSingInWithFormData","placeholder","onChange","onClick","signInWithPopup","src","alt","validator","isEmail","sendPasswordResetEmail","then","catch","err","startForgotPassword","loadTasks","flag","data","collection","get","dataSnap","forEach","snapHijo","push","id","startCreatingProfileImage","url","getState","add","doc","setProfileImage","startUpdatingProfileImage","update","setError","error","removeError","stopModal","RegisterScreen","msgError","useSelector","state","ui","username","password2","isValidForm","length","createUserWithEmailAndPassword","startSignUpWithFormData","AuthRouter","exact","path","component","startUpdatingTask","completed","updateTask","addNewTask","task","deleteTask","loadTasksAction","tasks","datesCalc","date","dateNumArr","split","map","d","parseInt","NewTask","Date","datePicked","setDatePicked","useEffect","description","importance","isFullFIlled","days","moment","format","newTask","selected","SideButton","action","active","setActive","setAction","Sidebar","TaskCard","delete","startDeleteTask","style","color","PureTaskCard","memo","TasksList","filteredTask","TaskField","MainScreen","modal","fileUpload","file","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","ProfileScreen","isNotGoogle","setIsNotGoogle","profileImage","useLayoutEffect","providerData","providerId","inputImageChange","files","imageUrl","backgroundImage","document","getElementById","click","display","Topbar","useReducer","menu","toggle","location","useLocation","pathname","signOut","DashboardRouter","PublicRoute","isLoggedIn","Component","rest","props","PrivateRoute","AppRouter","checking","checkToggle","loggedIn","setLoggedIn","onAuthStateChanged","image","basename","process","authReducer","tasksReduer","filter","today","month","loading","uiReducer","rootReducer","combineReducers","tasksReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","Thunk","App","ReactDOM","render"],"mappings":"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","file":"static/js/main.f1bc2c95.chunk.js","sourcesContent":["\r\nexport const types = {\r\n\r\n    authLogin: '[Auth] Login',\r\n    authLogOut: '[Auth] Logout',\r\n\r\n    uiSetError: '[UI] Set error',\r\n    uiRemoveError: '[UI] Remove error',\r\n    uiStartLoading: '[UI] Start loading',\r\n    uiStopLoading: '[UI] Stop loading',\r\n    uiStartModal: '[UI] Start modal',\r\n    uiStopModal: '[UI] Stop modal',\r\n    uiSetAction: '[UI] Set action',\r\n    uiSetProfileImg: '[UI] Set profile Image',\r\n    uiProfileCleaning: '[UI] Profile image cleaning',\r\n\r\n    taskAddNew: '[task] Add new task',\r\n    taskDelete: '[task] Delete task',\r\n    taskUpdate: '[task] Update task',\r\n    taskFilter: '[task] Filter task',  \r\n    taskLoad: '[task] Load tasks',\r\n    taskCleaning: '[task] Logout cleaning'  \r\n\r\n}","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyC8B8kB_EZkDewgyItVXmdd9m2Oo4MP3t4\",\r\n    authDomain: \"my-todo-list-firebase.firebaseapp.com\",\r\n    projectId: \"my-todo-list-firebase\",\r\n    storageBucket: \"my-todo-list-firebase.appspot.com\",\r\n    messagingSenderId: \"74071702585\",\r\n    appId: \"1:74071702585:web:edcdcaa46565abf3a1a1e8\"\r\n  };\r\n\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n\r\nconst db = firebase.firestore();\r\nconst googleAuthProvider =new firebase.auth.GoogleAuthProvider();\r\n\r\nexport{\r\n  db,\r\n  googleAuthProvider, \r\n  firebase  \r\n}","import { types } from \"../types/types\";\r\nimport { firebase, googleAuthProvider } from '../firebase/firebase-config';\r\nimport Swal from \"sweetalert2\";\r\n\r\n\r\nexport const startSignUpWithFormData = ( email, password, name ) => {\r\n\r\n    return async( dispatch ) => { \r\n        \r\n        try {\r\n            const { user } = await firebase.auth()\r\n                                    .createUserWithEmailAndPassword(email, password);\r\n\r\n            if( !user?.uid ){\r\n                throw user;\r\n            }\r\n            \r\n            await user.updateProfile({ displayName: name });       \r\n            dispatch( login( user.displayName, user.uid ) );                     \r\n            \r\n        } catch( err ){       \r\n\r\n            console.log( err )\r\n        }\r\n       \r\n\r\n    }\r\n}\r\n\r\nexport const startSingInWithFormData = (email, password) => {\r\n\r\n    return async( dispatch ) => {\r\n\r\n        try {\r\n            const { user } = await firebase.auth().signInWithEmailAndPassword( email, password );\r\n\r\n            if( !user?.uid ){\r\n                throw user;\r\n             }\r\n\r\n            // dispatch( login( user.displayName, user.uid ) );\r\n\r\n        } catch (error) {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Oops...',\r\n                text: error              \r\n              })\r\n            console.log( error );\r\n        }\r\n        \r\n    }\r\n\r\n}\r\n\r\nexport const startForgotPassword = ( email) => {\r\n\r\n    return () => {\r\n        firebase.auth().sendPasswordResetEmail( email )\r\n                .then( () => {\r\n                    Swal.fire({\r\n                        icon: 'success',             \r\n                        text: `An e-mail has been sent to ${ email } to reset your password`,        \r\n                    })\r\n                } )\r\n                .catch( err => {\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n                        title: 'Oops...',\r\n                        text: err,\r\n                    })\r\n                } )\r\n    }\r\n\r\n}\r\n\r\nexport const startSingInWithGoogle = () => {\r\n\r\n    return () =>{ \r\n\r\n        firebase.auth().signInWithPopup( googleAuthProvider )                      \r\n                       \r\n    }\r\n\r\n\r\n}\r\n\r\nexport const startSignOut = () => {\r\n\r\n    return ( dispatch ) =>{\r\n\r\n        firebase.auth().signOut()\r\n                       .then( () => {\r\n                           dispatch( logout() );\r\n                       } )\r\n    }\r\n\r\n}\r\n\r\nexport const startUpdatingProfile = ( displayName, password = \"\" ) => {\r\n\r\n    return async( dispatch ) => {\r\n\r\n        try {\r\n\r\n            const user = firebase.auth().currentUser;\r\n            await user.updateProfile({\r\n                displayName            \r\n            });\r\n    \r\n            dispatch(login( user.displayName, user.uid ) );    \r\n    \r\n            if( password !== \"\" ){\r\n                await user.updatePassword( password );\r\n            } \r\n\r\n            Swal.fire({\r\n                icon: 'success',             \r\n                text: 'Profile successfully updated',        \r\n            })\r\n            \r\n        } catch (error) {\r\n                    \r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Oops...',\r\n                text: error,\r\n            })\r\n            \r\n        }\r\n      \r\n       \r\n    }\r\n\r\n}   \r\n\r\nexport const login = ( name, uid ) =>({\r\n\r\n    type: types.authLogin,\r\n    payload: { name, uid }\r\n\r\n})\r\n\r\nexport const logout = () => ({\r\n\r\n    type: types.authLogOut\r\n\r\n})","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n\r\n    const [formState, setFormState] = useState( initialState );\r\n    const reset = () => {\r\n        setFormState( initialState );\r\n    }\r\n\r\n    const handleInputChange = ( {target: {name, value}} )=>{\r\n        setFormState({\r\n            ...formState,\r\n            [name]: value\r\n\r\n        })\r\n   }\r\n\r\n//    console.log( formState );\r\n\r\n    return {\r\n\r\n        formState,\r\n        handleInputChange, \r\n        reset\r\n\r\n    }       \r\n    \r\n};","import { useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { startForgotPassword, startSingInWithFormData, startSingInWithGoogle } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport Swal from \"sweetalert2\";\r\nimport validator from 'validator';\r\n\r\n\r\nconst LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { formState, handleInputChange } = useForm({\r\n        email:'',\r\n        password: ''\r\n    })\r\n\r\n    const { email, password } = formState;\r\n\r\n    const handleSignIn = (e) => {\r\n        e.preventDefault();\r\n        dispatch( startSingInWithFormData( email, password ) );\r\n    }\r\n\r\n    const handleGoogleLogin = () => {\r\n\r\n        dispatch( startSingInWithGoogle() );\r\n    }\r\n\r\n    const handleResetPassword = () => {\r\n        if(!validator.isEmail( email )){\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Please introduce a valid e-mail',                \r\n            })\r\n        }else{\r\n            dispatch( startForgotPassword( email ) );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"auth\">\r\n            <div className=\"auth__box animate__animated animate__fadeIn\">\r\n\r\n                <div className=\"auth__box--blue\">\r\n                    <h2>Login</h2>\r\n                    <p>Log in and start creating your next task</p>\r\n                    <p>Don't you have an account ? <Link className=\"link\" to=\"/auth/register\">Sign up</Link> </p>\r\n                </div>\r\n\r\n                <div className=\"auth__box--white\">\r\n                    <form onSubmit={ handleSignIn }> \r\n                        <div className=\"input\">\r\n                            <input\r\n                                className=\"input__field\"\r\n                                type=\"text\" \r\n                                placeholder=\"Email\"\r\n                                name=\"email\"\r\n                                value={ email }\r\n                                onChange={ handleInputChange }\r\n                            />\r\n                        </div>\r\n                       \r\n                        <div className=\"input\">\r\n                            <input\r\n                                className=\"input__field\"\r\n                                type=\"password\" \r\n                                placeholder=\"Password\"\r\n                                name=\"password\"\r\n                                value={ password }\r\n                                onChange={ handleInputChange }\r\n                            />\r\n                        </div>\r\n                      \r\n                        <div>\r\n                            <button \r\n                                className=\"btn btn--primary block mt-4\"\r\n                                type=\"submit\"\r\n                            >\r\n                                Login\r\n                            </button>                       \r\n                        </div>\r\n\r\n                        <div \r\n                            className=\"auth__social-networks\"                            \r\n                        >\r\n                            <p>Login with social networks</p>\r\n                            <div \r\n                                className=\"google-btn\"\r\n                                onClick={ handleGoogleLogin }\r\n                            >\r\n                                <div className=\"google-icon-wrapper\">\r\n                                    <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\r\n                                </div>\r\n                                <p className=\"btn-text\">\r\n                                    <b>Sign in with google</b>\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"auth__forgot\">\r\n                            <p\r\n                                onClick={ handleResetPassword }\r\n                            >Forgot Password?\r\n                            </p>\r\n                        </div>\r\n\r\n                    </form>\r\n                    \r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginScreen\r\n","import { db } from \"../firebase/firebase-config\";\r\n\r\n\r\nconst loadTasks = async( uid, flag = true) => {\r\n   \r\n   const data = [];\r\n   let dataSnap;\r\n\r\n   if( flag ){\r\n      dataSnap = await db.collection( `${ uid }/todo-list/tasks` ).get();\r\n   }else{\r\n      dataSnap = await db.collection( `${ uid }/todo-list/profileImage` ).get();\r\n   }\r\n  \r\n\r\n  dataSnap.forEach( snapHijo => { \r\n\r\n        data.push( { ...snapHijo.data(), id: snapHijo.id } )\r\n\r\n   })\r\n  \r\n   return data;\r\n}\r\n\r\nexport default loadTasks;\r\n","import { db } from \"../firebase/firebase-config\";\r\nimport loadTasks from \"../helpers/loadTasks\";\r\nimport { types } from \"../types/types\";\r\n\r\n\r\n\r\nexport const startCreatingProfileImage = ( url ) => {\r\n\r\n    return ( dispatch, getState) => {\r\n\r\n        const { auth:{uid} } = getState()\r\n        db.collection( `${ uid }/todo-list/profileImage` )\r\n          .add( { url } )\r\n          .then( (doc) => {\r\n            dispatch( setProfileImage( url, doc.id ) )\r\n          } )\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const startUpdatingProfileImage = ( url, id ) => {\r\n    console.log( id )\r\n    return (dispatch, getState) => {\r\n\r\n        const { auth: { uid } } = getState();\r\n\r\n        db.collection( `${ uid }/todo-list/profileImage` )\r\n          .doc( id )\r\n          .update({ url })\r\n          .then(() => {\r\n              dispatch( setProfileImage( url, id ) );\r\n        } );\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const startLoadingProfileImage = ( url ) => {\r\n    \r\n    return async( dispatch, getState ) => {\r\n\r\n        const { auth: { uid } } = getState();\r\n        const image = await loadTasks( uid, false );\r\n\r\n        if( image.length ){\r\n            dispatch( setProfileImage( image[0].url, image[0].id) )\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport const setError = ( error ) =>({\r\n\r\n    type: types.uiSetError,\r\n    payload: error\r\n})\r\n\r\nexport const removeError = ( ) =>({\r\n\r\n    type: types.uiRemoveError,\r\n})\r\n\r\nexport const startLoading = () =>({\r\n\r\n    type: types.uiStartLoading\r\n\r\n})\r\n\r\nexport const stopLoading = () =>({\r\n\r\n    type: types.uiStopLoading\r\n\r\n})\r\n\r\nexport const startModal = () => ({\r\n    type: types.uiStartModal\r\n})\r\n\r\nexport const stopModal = () => ({\r\n    type: types.uiStopModal\r\n})\r\n\r\nexport const setAction = ( action ) => ({\r\n    type: types.uiSetAction,\r\n    payload: action\r\n})\r\n\r\nexport const setProfileImage = ( url, id ) => ({\r\n\r\n    type: types.uiSetProfileImg,\r\n    payload: {url, id}\r\n\r\n})\r\n\r\nexport const profileImageCleaning = () => ({\r\n\r\n    type: types.uiProfileCleaning\r\n\r\n})\r\n    \r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport validator from 'validator';\r\n\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { startSignUpWithFormData } from '../../actions/auth';\r\nimport { removeError, setError } from '../../actions/uiActions';\r\n\r\nexport const RegisterScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { msgError } = useSelector(state => state.ui);\r\n\r\n    const { formState, handleInputChange } = useForm({\r\n        username: '',\r\n        email:'',\r\n        password:'',\r\n        password2: ''\r\n    });\r\n\r\n    const { username, email, password, password2 } = formState;\r\n\r\n    const handleSignUp = (e) => {\r\n        \r\n        e.preventDefault();\r\n        if( isValidForm() ){\r\n            dispatch( startSignUpWithFormData( email, password, username ) );\r\n        }\r\n\r\n    }\r\n\r\n    const isValidForm = () => {\r\n\r\n        if( username.length < 2 ){\r\n            dispatch( setError( 'The username length has to be more than two' ) );\r\n            return false;\r\n\r\n        }else if( password !== password2 || password.length < 6 ){\r\n            dispatch( setError( 'Password length has to be more than 6 and match' ) );\r\n            return false;\r\n\r\n        }else if( !validator.isEmail( email ) ){\r\n            dispatch( setError( 'Please use a valid e-mail' ) );\r\n            return false;\r\n        }else{\r\n\r\n            dispatch( removeError() );\r\n            return true;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"auth\">\r\n            <div className=\"auth__box animate__animated animate__fadeIn\">\r\n                <div className=\"auth__box--white\">\r\n                    <div>\r\n                        <form onSubmit={ handleSignUp } >\r\n\r\n                            <div className=\"input\">\r\n                                <input\r\n                                    className=\"input__field\"\r\n                                    type=\"text\" \r\n                                    placeholder=\"Username\"\r\n                                    name=\"username\"\r\n                                    value={ username }\r\n                                    onChange={ handleInputChange }\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"input\">\r\n                                <input\r\n                                    className=\"input__field\"\r\n                                    type=\"text\" \r\n                                    placeholder=\"Email\"\r\n                                    name=\"email\"\r\n                                    value={ email }\r\n                                    onChange={ handleInputChange }\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"input\">\r\n                                <input\r\n                                    className=\"input__field\"\r\n                                    type=\"password\" \r\n                                    placeholder=\"Password\"\r\n                                    name=\"password\"\r\n                                    value={ password }\r\n                                    onChange={ handleInputChange }\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"input\">\r\n                                <input\r\n                                    className=\"input__field\"\r\n                                    type=\"password\" \r\n                                    placeholder=\"Password confirm\"\r\n                                    name=\"password2\"\r\n                                    value={ password2 }\r\n                                    onChange={ handleInputChange }\r\n                                />\r\n                            </div>\r\n\r\n                            <button \r\n                                className=\"btn btn--primary block mt-4\"\r\n                                type=\"submit\"\r\n                            >\r\n                                Sign Up\r\n                            </button>\r\n\r\n                        </form>\r\n                      \r\n\r\n                    </div>          \r\n                 \r\n\r\n                </div>\r\n\r\n                <div className=\"auth__box--blue\">\r\n                    <h2>Sign Up</h2>\r\n                    <p>Register and create an account on Todo List. Write your tasks anytime and anywhere</p>\r\n                    <p>Already have an account ?  <Link className=\"link\" to=\"/auth/login\">Login</Link> </p>\r\n\r\n                    {\r\n                        msgError\r\n                           &&\r\n                        <div className=\" auth__info-danger\">\r\n                           { msgError }\r\n                        </div>\r\n\r\n                    }\r\n                    \r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import {\r\n    Switch,\r\n    Route,\r\n    Redirect\r\n} from \"react-router-dom\";\r\nimport LoginScreen from \"../components/auth/LoginScreen\";\r\nimport { RegisterScreen } from \"../components/auth/RegisterScreen\";\r\n\r\nconst AuthRouter = () => {\r\n    return (\r\n        <div>\r\n\r\n            <Switch>\r\n\r\n                <Route exact path=\"/auth/login\" component={ LoginScreen }/>\r\n                <Route exact path=\"/auth/register\" component={ RegisterScreen }/>\r\n\r\n                <Redirect to=\"/auth/login\" /> \r\n\r\n            </Switch>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AuthRouter\r\n","import { db } from \"../firebase/firebase-config\"\r\nimport loadTasks from \"../helpers/loadTasks\";\r\nimport { types } from \"../types/types\";\r\nimport { stopLoading } from \"./uiActions\";\r\n\r\n\r\nexport const startNewTask = ( task ) => {\r\n\r\n    \r\n    return (dispatch, getState) => {\r\n\r\n        const { auth: { uid } } = getState();\r\n\r\n        db.collection( `${ uid }/todo-list/tasks` )\r\n          .add( task )\r\n          .then( ( doc ) => {\r\n\r\n            dispatch( addNewTask( task, doc.id ) )\r\n\r\n          } )\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const startDeleteTask = ( id ) => {\r\n\r\n    return ( dispatch, getState ) => {\r\n\r\n        const { auth: { uid } } = getState();\r\n\r\n        db.collection( `${ uid }/todo-list/tasks` )\r\n          .doc( id )\r\n          .delete( )\r\n          .then( () => dispatch( deleteTask( id ) ) );\r\n    }\r\n\r\n}\r\n\r\nexport const startLoadingNotes = () => {\r\n    \r\n    return async( dispatch, getState ) => {\r\n\r\n        const { auth: { uid } } = getState();\r\n        const tasks = await loadTasks( uid );\r\n\r\n        dispatch( loadTasksAction( tasks ) );\r\n\r\n    }\r\n} \r\n\r\nexport const startUpdatingTask = ( completed, id ) => {\r\n\r\n    return (dispatch, getState) => {\r\n\r\n        const { auth: { uid } } = getState();\r\n\r\n        db.collection( `${ uid }/todo-list/tasks` )\r\n          .doc( id )\r\n          .update({completed })\r\n          .then(() => {\r\n              dispatch( updateTask(  id  ) );\r\n              dispatch( stopLoading() );\r\n        } );\r\n    }\r\n\r\n}\r\n\r\n\r\nconst addNewTask = ( task, id ) => ({\r\n\r\n    type: types.taskAddNew,\r\n    payload: { ...task, id}\r\n\r\n})\r\n\r\nexport const filterTask = ( filter ) => ({\r\n\r\n    type: types.taskFilter,\r\n    payload: filter\r\n\r\n})\r\n\r\nexport const deleteTask = ( id ) => ({\r\n\r\n    type: types.taskDelete,\r\n    payload: id\r\n\r\n})\r\n\r\nexport const loadTasksAction = ( tasks ) =>({\r\n\r\n    type: types.taskLoad,\r\n    payload: tasks\r\n\r\n})\r\n\r\nexport const updateTask = ( id ) => ({\r\n\r\n    type: types.taskUpdate,\r\n    payload: id\r\n\r\n})\r\n\r\nexport const logoutCleaning = () =>({\r\n\r\n    type: types.taskCleaning\r\n\r\n})\r\n","\r\n\r\nconst datesCalc = ( date ) => {\r\n    \r\n    const dateArr = date.split('/');\r\n    const dateNumArr = dateArr.map( d => parseInt( d ) );\r\n\r\n    return dateNumArr[0]*30 + dateNumArr[1];\r\n}\r\n\r\nexport default datesCalc\r\n","import { useDispatch, useSelector } from \"react-redux\"\r\nimport { startNewTask } from \"../../../actions/tasksActions\";\r\nimport {removeError, setError, stopModal } from \"../../../actions/uiActions\";\r\nimport { useForm } from \"../../../hooks/useForm\";\r\nimport moment from 'moment';\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { useEffect, useState } from \"react\";\r\nimport datesCalc from \"../../../helpers/datesCalc\";\r\n\r\n\r\nconst NewTask = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { msgError } = useSelector(state => state.ui);\r\n    const [datePicked, setDatePicked] = useState(new Date())\r\n\r\n    useEffect(() => {\r\n        dispatch( removeError() );\r\n    }, [dispatch])\r\n\r\n    const { formState, handleInputChange } = useForm({\r\n        title: '',\r\n        description: '',\r\n        importance:'null',\r\n    })  \r\n    \r\n    const { title, description, importance } = formState;\r\n\r\n    const handleModal = () => {\r\n        dispatch( stopModal() );\r\n    }   \r\n\r\n    const handleNewTask = ( e ) => {\r\n        e.preventDefault();        \r\n        \r\n        if( !isFullFIlled() ){return };\r\n\r\n        const days = datesCalc(moment(datePicked).format('l'));\r\n\r\n        const newTask = {\r\n            title, \r\n            description, \r\n            importance,\r\n            completed:false,\r\n            date: moment(datePicked).format('LL'),\r\n            days\r\n        };\r\n\r\n        dispatch( startNewTask( newTask ) );\r\n        dispatch( stopModal() );\r\n\r\n    }\r\n\r\n    const isFullFIlled = () => {\r\n\r\n        if( title === '' ){\r\n            dispatch( setError( 'Please fill out the title field' ) );\r\n            return false;\r\n        }else if( description ==='' ){\r\n            dispatch( setError( 'Please fill out the description field' ) );\r\n            return false;\r\n        }else if( importance ==='null' ){\r\n            dispatch( setError( 'Please select an importance' ) );\r\n            return false;\r\n        }\r\n\r\n        dispatch( removeError() );\r\n        return true;\r\n    }\r\n\r\n    return (\r\n        <div className=\"new-task\" id=\"pop-up\">\r\n            <div className=\"new-task__content animate__animated animate__fadeIn\">\r\n\r\n                <div className=\"new-task__close\">\r\n                    <i \r\n                        className=\"fas fa-times pointer\"\r\n                        onClick={ handleModal }\r\n                    ></i>\r\n                </div>\r\n\r\n                <form onSubmit={ handleNewTask }>\r\n\r\n                    <div className=\"new-task__group\">\r\n                        <h3>Title</h3>\r\n                        <div className=\"input\">\r\n                            <input\r\n                                id=\"titleInput\"\r\n                                placeholder=\"What needs to be done?\"\r\n                                className=\"input__field\"\r\n                                name=\"title\"\r\n                                value={ title }\r\n                                onChange={ handleInputChange }\r\n                            />                            \r\n                        </div>\r\n                    </div>\r\n                    <div className=\"new-task__group\">\r\n                        <h3>Description</h3>\r\n                        <div className=\"new-task__area\">\r\n                            <textarea\r\n                                id=\"descInput\"\r\n                                placeholder=\"Description about this task\"\r\n                                className=\"new-task__textarea\"\r\n                                name=\"description\"\r\n                                value={ description }\r\n                                onChange={ handleInputChange }\r\n                            >\r\n                            </textarea>\r\n                        </div>\r\n                       \r\n                    </div>\r\n\r\n                    <div className=\"new-task__group \">\r\n                        <h3>Date picker</h3>\r\n                        <div className=\"new-task__date-picker\">\r\n                            {/* <MaterialUIPickers funct={ handleInputChange } /> */}\r\n                            <DatePicker selected={datePicked} onChange={date => setDatePicked(date)} />\r\n                        </div>\r\n                    \r\n                    </div>\r\n\r\n                    <div className=\"new-task__importance\">\r\n                        <p>Importance </p> \r\n                        <select name=\"importance\" onChange={ handleInputChange }  className=\"new-task__select\">\r\n                            <option \r\n                                value=\"null\"\r\n                            >Seleccione</option>\r\n\r\n                            <option \r\n                                value=\"low\"\r\n                            >Low</option>\r\n\r\n                            <option \r\n                                value=\"medium\"\r\n                            >Medium</option>\r\n\r\n                            <option \r\n                                value=\"high\"\r\n                            >High</option>\r\n                        </select>                  \r\n                    </div>\r\n\r\n                    {\r\n                        msgError   \r\n                          &&\r\n                        <div className=\"new-task__alert-info\">\r\n                          {msgError}\r\n                       </div>\r\n                        \r\n\r\n                    }                   \r\n\r\n                    <button \r\n                        className=\"btn btn--primary block mt-4\"\r\n                    >\r\n                        Add new task\r\n                    </button>\r\n\r\n                </form>             \r\n                \r\n            </div>\r\n        </div>  \r\n    )\r\n}\r\n\r\nexport default NewTask\r\n//","import { useEffect, useState,  } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { filterTask } from \"../../../actions/tasksActions\";\r\n// import { filterTask } from \"../../../actions/tasksActions\";\r\nimport { setAction } from \"../../../actions/uiActions\";\r\n\r\nconst SideButton = ({icon, text }) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { action } = useSelector(state => state.ui);\r\n    const [active, setActive]= useState(false);\r\n\r\n    const handleAction = () => {\r\n        dispatch( setAction( text ) );\r\n        dispatch( filterTask( text ) );\r\n    }\r\n\r\n    useEffect(() => {\r\n       \r\n        if( action === text ){\r\n            setActive( true );\r\n        }else{\r\n            setActive( false )\r\n        }\r\n\r\n    }, [action, text]);\r\n\r\n\r\n    return (\r\n        \r\n        <div \r\n            className={` main__sideButton ${ active && 'main__activeButton' }`}\r\n            onClick={ handleAction }\r\n        >\r\n            <i className={`${ icon } mr-2` }></i>\r\n            { text }\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default SideButton\r\n\r\n\r\n","import SideButton from \"./SideButton\"\r\n\r\nconst Sidebar = () => {\r\n    return (\r\n        <div className=\"main__sidebar\">\r\n            <h3>Task Management</h3>\r\n\r\n            <SideButton\r\n                icon={ \"far fa-list-alt \"}\r\n                text=\"All Tasks\"                \r\n             />\r\n\r\n            <SideButton\r\n                icon={ \"fas fa-lock\" }\r\n                text=\"In Progress\"\r\n             />\r\n\r\n            <SideButton\r\n                icon={ \"fas fa-check\" }\r\n                text=\"Completed\"\r\n             />\r\n\r\n            <SideButton\r\n                icon={\" fas fa-calendar-week \"}\r\n                text=\"Today\"\r\n             />\r\n\r\n            <SideButton\r\n                icon={ \"fas fa-calendar-day\" }\r\n                text=\"Tomorrow\"\r\n             />\r\n\r\n            <SideButton\r\n                icon={ \"far fa-calendar-times\" }\r\n                text=\"Month\"\r\n             />   \r\n\r\n          \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","import { useDispatch } from \"react-redux\";\r\nimport { startDeleteTask, startUpdatingTask } from \"../../../actions/tasksActions\";\r\nimport { startLoading } from \"../../../actions/uiActions\";\r\nimport { memo } from \"react\";\r\n\r\n\r\nconst TaskCard = ( { title, id, description, completed, date, importance } ) => { \r\n\r\n    const dispatch = useDispatch();\r\n    // const { loading } = useSelector(state => state.ui);\r\n\r\n\r\n    const handleDelete = () =>{\r\n        dispatch( startDeleteTask(id ) );\r\n    }\r\n\r\n    const handleCompleted = () => {\r\n        dispatch( startLoading() );\r\n        dispatch( startUpdatingTask( !completed, id ) );        \r\n    }\r\n    \r\n    return (\r\n        <div className=\"task animate__animated animate__fadeIn\">\r\n            <div className=\"task__title\">\r\n                <h3>{ title }</h3>\r\n                <i \r\n                    className=\"far fa-trash-alt pointer\"\r\n                    onClick={ handleDelete }\r\n                ></i>\r\n            </div>\r\n            <div className=\"task__body\">\r\n            { description }\r\n         \r\n            </div>\r\n            <div className=\"task__info\">\r\n                <div className=\"mr-2\">\r\n                    <i className=\"far fa-clock mr-1\"></i>\r\n                    { date }\r\n                </div>\r\n                <div>\r\n                    <i \r\n                        className=\"fas fa-flag mr-1\"\r\n                        style={{ color: `\r\n                            ${ importance === 'low'\r\n                                ? 'green'\r\n                                : importance === 'medium'\r\n                                    ? 'yellow': 'red' }` }}\r\n                    ></i>\r\n                    <i                          \r\n                        className=\"fas fa-check pointer\"\r\n                        onClick={ handleCompleted }\r\n                        style={{ color: `${ completed ? '#535353': '#c5b3b3' }`}}\r\n                    ></i>\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\n// export default TaskCard;\r\n\r\nexport const PureTaskCard = memo( TaskCard  );\r\n\r\n\r\n","import { useSelector } from \"react-redux\"\r\nimport { PureTaskCard } from \"./TaskCard\"\r\n\r\nconst TasksList = () => {\r\n\r\n    const { filteredTask, tasks } = useSelector(state => state.task);\r\n    const { action } = useSelector(state => state.ui)\r\n\r\n    return (\r\n        <div className=\"main__task-list\">\r\n\r\n            {   \r\n                (action === 'All Tasks'? tasks : filteredTask).map(  task => <PureTaskCard \r\n                                    key={ task.id }\r\n                                    { ...task } \r\n                            /> \r\n                )\r\n            }\r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TasksList\r\n","import { useDispatch, useSelector } from \"react-redux\"\r\nimport { startModal } from \"../../../actions/uiActions\";\r\nimport TasksList from \"./TasksList\"\r\n\r\n\r\nconst TaskField = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { action } = useSelector(state => state.ui);\r\n    const { tasks, filteredTask } = useSelector(state => state.task)\r\n\r\n    const handleModal = () =>{\r\n        dispatch( startModal() );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h2>{ action }<span>({ action === 'All Tasks'? tasks.length: filteredTask.length })</span> </h2>\r\n            <div className=\"main__taskAndButton\">\r\n\r\n                <TasksList />\r\n\r\n                <div className=\"main__button\">\r\n                    <button \r\n                        className=\"btn btn--primary block\"\r\n                        onClick={ handleModal }\r\n                    >\r\n                        + New Task\r\n                    </button >                                                \r\n\r\n                </div>               \r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TaskField\r\n","import { useSelector } from \"react-redux\"\r\nimport NewTask from \"./NewTask\"\r\nimport Sidebar from \"./Sidebar\"\r\nimport TaskField from \"./TaskField\"\r\n\r\nconst MainScreen = () => {\r\n\r\n    const { modal } = useSelector(state => state.ui)\r\n\r\n    return (\r\n        <>\r\n            <div className=\"main\">\r\n                <Sidebar/>  \r\n\r\n                <div className=\"main__task-field\">\r\n                    <TaskField />\r\n                </div> \r\n\r\n            </div>\r\n\r\n            {\r\n                modal\r\n                 &&\r\n                <NewTask />\r\n\r\n            }\r\n\r\n            \r\n                 \r\n        </>\r\n    )\r\n}\r\n\r\nexport default MainScreen\r\n","\r\n\r\nconst fileUpload = async( file ) => {\r\n\r\n    const urlCloudinary = 'https://api.cloudinary.com/v1_1/dtfrhtotj/upload';\r\n\r\n    const formData = new FormData();\r\n    formData.append('upload_preset', 'react-journal');\r\n    formData.append('file', file);\r\n\r\n    try {\r\n\r\n        const resp = await fetch( urlCloudinary, {\r\n            method: 'POST',\r\n            body: formData\r\n        } );\r\n\r\n        if( resp.ok ){\r\n            const cloudResp = await resp.json();\r\n            return cloudResp.secure_url;\r\n        }else{\r\n             throw await resp.json();\r\n        }\r\n        \r\n    } catch (error) {\r\n        return null;\r\n    }\r\n  \r\n}\r\n\r\nexport default fileUpload\r\n","import { useLayoutEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { startUpdatingProfile } from \"../../../actions/auth\";\r\nimport { removeError, setError, startCreatingProfileImage, startUpdatingProfileImage } from \"../../../actions/uiActions\";\r\nimport fileUpload from \"../../../helpers/fileUpload\";\r\nimport { useForm } from \"../../../hooks/useForm\";\r\nimport { firebase } from \"../../../firebase/firebase-config\";\r\n\r\nconst ProfileScreen = () => {\r\n\r\n    const [isNotGoogle, setIsNotGoogle] = useState(true);\r\n    const { name } = useSelector(state => state.auth);\r\n    const { profileImage, msgError } = useSelector(state => state.ui)\r\n    const dispatch = useDispatch();\r\n\r\n    useLayoutEffect(() => {\r\n       \r\n        const user = firebase.auth().currentUser;\r\n\r\n        if( user.providerData[0].providerId === 'google.com' ){\r\n            setIsNotGoogle( false );\r\n        }\r\n\r\n    }, [])\r\n\r\n\r\n    const { formState, handleInputChange } = useForm({\r\n        user: name,\r\n        password: \"\",\r\n        password2: \"\"\r\n    })\r\n\r\n    const { user, password, password2 } = formState;\r\n\r\n    const handleUploadImage = () => {\r\n        document.getElementById('input-image').click();\r\n    }\r\n\r\n    const inputImageChange = async( e ) => {\r\n\r\n        const imageUrl = await fileUpload( e.target.files[0] ); \r\n\r\n        if( profileImage.url === \"https://cdn.pixabay.com/photo/2016/08/08/09/17/avatar-1577909_1280.png\" ){\r\n            dispatch( startCreatingProfileImage( imageUrl ) );\r\n        }else{\r\n            console.log(profileImage.id)\r\n            dispatch( startUpdatingProfileImage(imageUrl, profileImage.id ) )\r\n        }\r\n\r\n    }\r\n\r\n    const handleUpdateProfile = (e) => {\r\n        e.preventDefault();\r\n\r\n        if( user.length < 2 ){\r\n            dispatch( setError( 'Invalid username' ) );\r\n        } else if( password.length < 6 && password !== \"\" ){\r\n            dispatch( setError( 'Password length has to be more than 6 and match' ) );\r\n        } else if(password2 === password){\r\n            dispatch( removeError() );\r\n            dispatch( startUpdatingProfile( user, password ) );\r\n        } else if( password === \"\" && password2 === \"\" ){\r\n            dispatch( startUpdatingProfile( user ) )\r\n        }       \r\n        \r\n        \r\n    }   \r\n\r\n    return (\r\n        <div className=\"profile\">\r\n            <h2>Profile</h2>\r\n\r\n            <div className=\"profile__user-info\">\r\n                <div \r\n                    className=\"profile__user-image\"\r\n                    style={{ backgroundImage: `url( ${ profileImage.url } )` }}\r\n                >\r\n                \r\n                </div>\r\n                <button \r\n                    className=\"btn btn--primary block\"\r\n                    onClick={ handleUploadImage }\r\n                >\r\n                    Choose a file\r\n                </button>\r\n                <input \r\n                    id=\"input-image\" \r\n                    type=\"file\" \r\n                    style={{ display: 'none' }} \r\n                    onChange={ inputImageChange }\r\n                />\r\n            </div>\r\n\r\n            {   \r\n                isNotGoogle\r\n                  &&\r\n                <form onSubmit={ handleUpdateProfile }>\r\n\r\n                  <div className=\"input\">\r\n                     <input \r\n                          className=\"input__field\"\r\n                          name=\"user\"\r\n                          value={ user }\r\n                          onChange={ handleInputChange }\r\n                      />\r\n                  </div>\r\n  \r\n                  <div className=\"input\">\r\n                     <input \r\n                          type=\"password\"\r\n                          className=\"input__field\"\r\n                          placeholder=\" Password (blank to keep the same)\" \r\n                          name=\"password\"\r\n                          value={ password }\r\n                          onChange={ handleInputChange }\r\n                      />\r\n                  </div>\r\n  \r\n                  <div className=\"input\">\r\n                      <input \r\n                          type=\"password\"\r\n                          className=\"input__field\" \r\n                          placeholder=\"Confirm (blank to keep the same)\" \r\n                          name=\"password2\"\r\n                          value={ password2 }\r\n                          onChange={ handleInputChange }\r\n                      />\r\n                  </div>\r\n  \r\n                  {\r\n                      msgError\r\n                        &&\r\n                      <div className=\" auth__info-danger\">\r\n                        { msgError }\r\n                      </div>\r\n  \r\n                  }                \r\n  \r\n                  <button \r\n                      className=\"btn btn--primary block mt-2\"\r\n                      type=\"submit\"\r\n                  >\r\n                      Update\r\n                  </button>\r\n  \r\n              </form>\r\n\r\n            }\r\n\r\n           \r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileScreen\r\n","import { useReducer } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport { startSignOut } from \"../../../actions/auth\";\r\nimport { logoutCleaning } from \"../../../actions/tasksActions\";\r\nimport { profileImageCleaning } from \"../../../actions/uiActions\";\r\n// import { startLogoutCleaning } from \"../../../actions/tasksActions\";\r\n\r\nconst Topbar = () => {\r\n\r\n    const [menu, toggle] = useReducer(menu => !menu, false);\r\n    const { name} = useSelector(state => state.auth);\r\n    const { profileImage } = useSelector(state => state.ui)\r\n    const location = useLocation();\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const handleSignOut = () => {\r\n        \r\n        dispatch( startSignOut() );\r\n        dispatch( logoutCleaning()  );\r\n        dispatch( profileImageCleaning() );\r\n    }\r\n\r\n    return (\r\n        <div className=\"topbar\">\r\n            <h1>Todo App</h1>\r\n            <div className=\"topbar__info-box\">\r\n\t\t\t\t\r\n           \t\t <h2>{ name }\r\n                        <i \r\n                            className={ `fas fa-chevron-down pointer ml-1 ${ menu && 'fa-rotate-180' } ` }\r\n                            onClick={ toggle }\r\n                        >                            \r\n                        </i>\r\n                </h2>\r\n              \r\n                <div \r\n                    className=\"topbar__img-container\"\r\n                    style={{ backgroundImage:`url( ${ profileImage.url } )` }}\r\n                >\r\n                </div>\r\n                \r\n\t\t\t   \r\n\r\n                 {\r\n                     menu \r\n                      &&\r\n                    <div className=\"topbar__menu animate__animated animate__fadeIn\" >\r\n                        <Link \r\n                            to={ location.pathname === \"/main\" ? \"/profile\": \"/main\" }\r\n                            className=\"link\"\r\n                        >\r\n                            { location.pathname === \"/main\"? 'Profile': 'Menu' }</Link>\r\n                        <p\r\n                            onClick={ handleSignOut }\r\n                        >\r\n                            Logout\r\n                        </p>\r\n                    </div>\r\n\r\n                 }\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Topbar\r\n","import {\r\n    Switch,\r\n    Route,\r\n    Redirect\r\n} from \"react-router-dom\";\r\n\r\nimport MainScreen from \"../components/app/main/MainScreen\";\r\nimport ProfileScreen from \"../components/app/profile/ProfileScreen\";\r\nimport Topbar from \"../components/app/topbar/Topbar\";\r\n \r\n\r\nconst DashboardRouter = () => {\r\n  \r\n\r\n    return (\r\n        <div className=\"dashboard\">\r\n            <Topbar/>\r\n            \r\n            <Switch>\r\n\r\n                <Route exact path=\"/profile\" component={ ProfileScreen } />\r\n                <Route exact path=\"/main\" component={ MainScreen } />\r\n\r\n                <Redirect to=\"/main\" />\r\n\r\n            </Switch>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DashboardRouter\r\n","import { Route, Redirect } from \"react-router-dom\";\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst PublicRoute = ({\r\n    isLoggedIn,\r\n    component:Component,\r\n    ...rest\r\n}) => {\r\n    // console.log( isLoggedIn )\r\n\r\n    return (\r\n        <Route \r\n            {...rest}\r\n            component = { ( props ) => (\r\n                    !isLoggedIn\r\n                        ? <Component {...props}/>\r\n                        : <Redirect to=\"/main\" />\r\n             ) } \r\n        />\r\n    )\r\n}\r\n\r\nexport default PublicRoute\r\n\r\nPublicRoute.propTypes = {\r\n\r\n    isLoggedIn: PropTypes.bool.isRequired\r\n\r\n}\r\n","import { Route, Redirect } from \"react-router-dom\";\r\nimport  PropTypes  from 'prop-types';\r\n\r\nconst PrivateRoute = ({\r\n    isLoggedIn,\r\n    component:Component,\r\n    ...rest\r\n}) => {\r\n    // console.log( isLoggedIn )\r\n    return (\r\n        <Route \r\n            {...rest}\r\n            component = { ( props ) => (\r\n                    isLoggedIn\r\n                        ? <Component {...props}/>\r\n                        : <Redirect to=\"/auth/login\" />\r\n             ) } \r\n        />\r\n    )\r\n}\r\n\r\nexport default PrivateRoute\r\n\r\n\r\nPrivateRoute.propTypes = {\r\n\r\n    isLoggedIn: PropTypes.bool.isRequired\r\n\r\n}","import { useEffect, useState } from \"react\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch, \r\n    Redirect,\r\n    \r\n} from \"react-router-dom\";\r\nimport AuthRouter from \"./AuthRouter\";\r\nimport DashboardRouter from \"./DashboardRouter\";\r\nimport { firebase } from '../firebase/firebase-config'\r\nimport { useDispatch } from \"react-redux\";\r\nimport { login } from \"../actions/auth\";\r\nimport PublicRoute from \"../routes/PublicRoute\";\r\nimport PrivateRoute from \"../routes/PrivateRoute\";\r\nimport { startLoadingNotes } from \"../actions/tasksActions\";\r\nimport { startLoadingProfileImage } from \"../actions/uiActions\";\r\n\r\nconst AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [checking, checkToggle] = useState( true );\r\n    const [loggedIn, setLoggedIn] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        firebase.auth().onAuthStateChanged( user => {\r\n            \r\n            if( user?.uid ){\r\n                \r\n                dispatch( login( user.displayName, user.uid) );\r\n                dispatch( startLoadingNotes() );\r\n                dispatch( startLoadingProfileImage( ) );                \r\n                setLoggedIn( true );\r\n                \r\n            }else{\r\n                setLoggedIn( false );\r\n            }\r\n\r\n            checkToggle( false );\r\n\r\n        } )\r\n    }, [dispatch]);\r\n\r\n\r\n    if( checking ){ return <h2> Wait... </h2> }\r\n    \r\n    return (\r\n        <Router basename={process.env.PUBLIC_URL}>\r\n            <div>\r\n\r\n                <Switch>\r\n\r\n                    <PublicRoute  \r\n                        path=\"/auth\" \r\n                        isLoggedIn={ loggedIn }\r\n                        component={ AuthRouter } \r\n                    />\r\n\r\n                    <PrivateRoute \r\n                         \r\n                         path=\"/\" \r\n                         isLoggedIn={ loggedIn }  \r\n                         component={ DashboardRouter } \r\n                    /> \r\n\r\n                    <Redirect to=\"/auth/login\" />\r\n\r\n                </Switch>\r\n\r\n\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default AppRouter\r\n","\r\nimport { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    uid: null,\r\n    name: '',\r\n    \r\n}\r\n\r\nconst authReducer = (state=initialState, action) => {\r\n    // console.log( action.payload);\r\n    switch (action.type) {\r\n        case types.authLogin:\r\n            \r\n            return { ...state, ...action.payload };\r\n\r\n        case types.authLogOut:\r\n\r\n            return { ...initialState };\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport default authReducer\r\n","import datesCalc from \"../helpers/datesCalc\";\r\nimport { types } from \"../types/types\";\r\nimport moment from 'moment';\r\n\r\nconst initialState = {\r\n    tasks: [],\r\n    filteredTask:[]\r\n}\r\n\r\n\r\nconst tasksReduer = (state= initialState, action) => {  \r\n    \r\n   \r\n\r\n    switch (action.type) {\r\n        case types.taskAddNew:\r\n            \r\n            return { ...state, tasks:[...state.tasks, action.payload] };\r\n\r\n        case types.taskDelete:\r\n\r\n            return{ ...state, tasks: state.tasks.filter( task => task.id !== action.payload ) };\r\n\r\n        case types.taskLoad:\r\n\r\n            return { ...state, tasks:[...action.payload] };\r\n\r\n        case types.taskUpdate:\r\n\r\n            return {...state, tasks: state.tasks.map( task => (\r\n                task.id === action.payload \r\n                ? {...task, completed: !task.completed}\r\n                : task \r\n            ) )}\r\n\r\n        case types.taskCleaning:\r\n\r\n            return initialState;\r\n\r\n        case types.taskFilter:  \r\n                \r\n            const today = datesCalc( moment( new Date() ).format('l') );\r\n            const month = moment( new Date() ).format('MMMM');\r\n\r\n            switch (action.payload) {\r\n                case 'All Tasks':\r\n                    \r\n                    return state;\r\n                \r\n                case 'In Progress':\r\n\r\n                    return { ...state, filteredTask: state.tasks.filter( task => task.completed === false ) };\r\n\r\n                case 'Completed':\r\n\r\n                    return { ...state, filteredTask: state.tasks.filter( task => task.completed === true ) };\r\n\r\n                case 'Today':                   \r\n\r\n                    return  {...state, filteredTask: state.tasks.filter( task => task.days - today === 0 )};\r\n\r\n                case 'Tomorrow':\r\n\r\n                    return  {...state, filteredTask: state.tasks.filter( task => task.days - today === 1 )};\r\n\r\n                case 'Month':\r\n\r\n                    return {...state, filteredTask: state.tasks.filter( task => task.date.split(' ')[0] === month )};                \r\n\r\n          \r\n                default:\r\n                    return state;\r\n            }\r\n\r\n           \r\n      \r\n            \r\n    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport default tasksReduer\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    msgError: null,\r\n    loading: false,\r\n    modal: false,\r\n    action: 'All Tasks',\r\n    profileImage: {\r\n        url: \"https://cdn.pixabay.com/photo/2016/08/08/09/17/avatar-1577909_1280.png\",\r\n        id: ''\r\n    }\r\n}\r\n\r\nconst uiReducer = (state= initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.uiSetError:\r\n            \r\n            return { ...state, msgError: action.payload };\r\n\r\n        case types.uiRemoveError:\r\n\r\n            return { ...state, msgError: null };\r\n\r\n        case types.uiStartLoading:\r\n\r\n            return { ...state, loading: true};\r\n\r\n        case types.uiStopLoading:\r\n\r\n            return { ...state, loading: false};\r\n\r\n        case types.uiStartModal:\r\n\r\n            return { ...state, modal: true };\r\n\r\n        case types.uiStopModal:\r\n\r\n            return { ...state, modal: false };\r\n        \r\n        case types.uiSetAction:\r\n\r\n            return {...state, action: action.payload };\r\n\r\n        case types.uiSetProfileImg:\r\n\r\n            return { ...state, profileImage: action.payload };\r\n\r\n        case types.uiProfileCleaning:\r\n\r\n            return initialState;\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n    \r\n}\r\n\r\nexport default uiReducer\r\n","import { \r\n         createStore,\r\n         applyMiddleware, \r\n         compose,\r\n         combineReducers   } from 'redux';\r\nimport Thunk from 'redux-thunk';\r\nimport authReducer from '../reducers/authReducer';\r\nimport tasksReducer from '../reducers/tasksReducer';\r\nimport uiReducer from '../reducers/uiReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n        auth: authReducer,\r\n        ui: uiReducer,\r\n        task: tasksReducer\r\n})\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore( \r\n        rootReducer,\r\n        composeEnhancers( applyMiddleware(Thunk) )        \r\n);\r\n","import { Provider } from 'react-redux';\r\nimport AppRouter from './routers/AppRouter';\r\nimport { store } from './store/store';\r\n\r\nconst App = () => {\r\n    return (\r\n        <Provider store={ store }>\r\n            <AppRouter />\r\n        </Provider >\r\n    )\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles/styles.scss';\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}